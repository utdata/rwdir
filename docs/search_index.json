[["answers.html", "Chapter 11 Plotting for answers 11.1 Goals of this chapter 11.2 Project setup 11.3 Import cleaned data 11.4 Make a searchable table 11.5 Plot yearly student percentage 11.6 How many districts", " Chapter 11 Plotting for answers This is the second of of a two-chapter project. Now that we have assembled and cleaned our data, we need to answer this question in our followup to the [Denied] series: Has the percentage of special education students in each school district changed since the benchmarking policy was dropped? How many districts were above that arbitrary 8.5% benchmark before and after the changes. The idea here is to answer those two questions through plotting. We’ll use this chapter to walk through the process of using plots to explore and find answers from yor data. 11.1 Goals of this chapter Introduce datatables() from the DT package Practice pivots to prepare data for plotting Practice plots to reveal insights in data There is a writing assignment 11.2 Project setup Within the same project you’ve been working, create a new R Notebook. You might call it 02-analysis. We will be using a new package so you’ll need to install it. Use your Console to run install.packages(\"DT\"). Include the libraries below and run them. library(tidyverse) library(scales) library(DT) 11.3 Import cleaned data Create a section for your import Import your cleaned data and call it sped if you want to follow along here. You should know how do do all that and I don’t know what you called in export anyway. But to recap, it should look like this: sped %&gt;% head() ## # A tibble: 6 × 8 ## district distname cntyname year all_count sped_count sped_percent audit_flag ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 001902 CAYUGA I… ANDERSON 2013 595 73 12.3 ABOVE ## 2 001902 CAYUGA I… ANDERSON 2014 553 76 13.7 ABOVE ## 3 001902 CAYUGA I… ANDERSON 2015 577 76 13.2 ABOVE ## 4 001902 CAYUGA I… ANDERSON 2016 568 78 13.7 ABOVE ## 5 001902 CAYUGA I… ANDERSON 2017 576 82 14.2 ABOVE ## 6 001902 CAYUGA I… ANDERSON 2018 575 83 14.4 ABOVE 11.4 Make a searchable table Wouldn’t it be nice to be able to see the percentage of special education students for each district for each year? The way our data is formatted now, that’s pretty hard to see with our “long” data here. Something more like this? (But with all the years) distname cntyname 2013 2014 2015 etc CAYUGA ISD ANDERSON 12.3 13.7 13.2 … ELKHART ISD ANDERSON 9.1 8.9 10.4 … FRANKSTON ISD ANDERSON 10.8 9.7 9.7 … NECHES ISD ANDERSON 11.1 9 11.1 … PALESTINE ISD ANDERSON 7.7 7.8 8.7 … WESTWOOD ISD ANDERSON 9.3 10 9.3 … And what if you could make that table searchable to find a district by name or county? That would be magic, right? We can do this by first reshaping our data using pivot_wider() and then applying a function called datatable(). 11.4.1 Pivot wider You used pivot_wider() with the candy data in Chapter 9, so you can look back at how that was done, but here are some hints: Create a new section that notes you are creating a table of district percents. First use select() to get just the columns you need: distname, cntyname and sped_percent. Then use pivot_wider()to make a tibble like the one above. Remember that the names_from = argument wants to know which column you want to use to create the names of the new columns. The values_from = argument wants to know which column to pull the cell values from. Save the result into a new tibble and call it district_percents_data You won’t need this code below because I believe in you district_percents_data &lt;- sped %&gt;% select(distname, cntyname, year, sped_percent) %&gt;% pivot_wider(names_from = year, values_from = sped_percent) 11.4.2 Make a datatable Now comes the magic. In a new R chunk take your district_percents_data and then pipe it into a function called datatable() district_percents_data %&gt;% datatable() That’s kinda brilliant, isn’t it? You know can search by any value in the table. Quick, tell me what was the percentage for Austin ISD in 2020? That will be useful tool for you when you are writing about specific districts. 11.5 Plot yearly student percentage Our first question about this data was this: Has the percentage of special education students in each school district changed since the benchmarking policy was dropped? Given the data we have, can we answer this? I’ll often do a hand drawing of a chart that might help me understand or communicate data. This helps me think about how to summarize and shape my data to get to that point. For this question, we might think of a chart like this: For each year, we’d like to know the percentage of students in special education. If we are to chart this, the x axis would be the year and the y axis would be the percentage for that year. We have the percent of students in special education for each district in each year. We could get an average of those percentages for each year, but that won’t take into account the size of each districts. But we also have the count of all students in a district all_count and count of all special education students sped_count. With these, we can build a more accurate percentage across all the districts with this. This allows us to calculate our student groups by year. So, let’s build this bar chart … starting with the data. This is a “simple” group_by and summarize, so I’ll give you hints but you write it yourself. Start a new notebook section and note you are getting yearly percentages In an R chunk, start with your sped data. Group by the year variable. In summarize, create a sum() of the all_count variable In the same sumarize, create a sum() of the sped_count variable. You might call this total_students. Check your results at this point … make sure it makes sense. You might call this total_sped Use mutate() to create a percentage called sped_percent from your total_students and total_sped summaries. I suggest you save all that into a new tibble called yearly_percent (because that’s what I’m gonna use.) My verison yearly_percent &lt;- sped %&gt;% group_by(year) %&gt;% summarise( total_students = sum(all_count), total_sped = sum(sped_count) ) %&gt;% mutate(sped_percent = ((total_sped / total_students) * 100) %&gt;% round(1)) yearly_percent ## # A tibble: 9 × 4 ## year total_students total_sped sped_percent ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 2013 4870038 418360 8.6 ## 2 2014 4929867 420847 8.5 ## 3 2015 4984714 427377 8.6 ## 4 2016 5034274 437487 8.7 ## 5 2017 5070664 449303 8.9 ## 6 2018 5088351 468097 9.2 ## 7 2019 5099385 499240 9.8 ## 8 2020 5142334 551718 10.7 ## 9 2021 4993274 566484 11.3 yearly_percent %&gt;% ggplot(aes(x = year, y = sped_percent)) + geom_col() + geom_text(aes(label = sped_percent, vjust = -.5)) 11.6 How many districts "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
